import { Button, Heading, HStack, Input, Stack, Grid, Text, Badge } from '@chakra-ui/react'
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import React, { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'
import { CepResponse, libCep } from './api/libCep'
import InputMask from 'react-input-mask';

const Home: NextPage = () => {
  const [ value, setValue ] = useState<string>("");
  const [ data, setData ] = useState<CepResponse>();
  const [ isError, setIsError ] = useState<boolean>(false);

  async function main(e: React.FormEvent) {
    e.preventDefault();
    const cep = value.replace("-", "");
    try {
      const response = await libCep.getAddress(cep);
      setData(response)
      if(isError === true){
        setIsError(false);
      }
    }
    catch(error){
      setIsError(true);
      console.log(error);
      setData(undefined);
    }
  }

  useEffect(() => {
    if(value === "" || value === "_____-___"){
      setData(undefined);
    }
  }, [value]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Buscar CEP</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Stack spacing="2rem" justify="center" alignItems="center">
          <Heading
            bgGradient='linear(to-l, #7928CA, #FF0080)'
            bgClip='text'
            fontSize='6xl'
          >
            Buscar Cep
          </Heading>
          <HStack
            as="form"
            onSubmit={main}
          >
             <Input
              as={InputMask}
              mask='99999-999'
              type="text" 
              value={value}
              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value)}
            />
            <Button
              type="submit"
              onClick={(e: React.FormEvent) => main(e)}
            >
              Buscar
            </Button>
          </HStack>
          {isError && (
              <Badge colorScheme='red'>Não foi possível localizar este CEP.</Badge>

          )}
          {data && (
            <Grid
              templateColumns="repeat(4, 1fr)"
              gap="1rem"
              w="600px"
              bgColor="gray.100"
              padding="20px"
              borderRadius="5px"
              textAlign="center"
            >
              <Stack>
                <Heading
                  fontSize="1rem"
                  fontWeight="bold"
                  textTransform="uppercase"
                >
                  bairro
                </Heading>
                <Text>
                  {data?.neighborhood} 
                </Text>
              </Stack>

              <Stack>
                <Heading
                  fontSize="1rem"
                  fontWeight="bold"
                  textTransform="uppercase"
                >
                  cep
                </Heading>
                <Text>
                  {data?.cep} 
                </Text>
              </Stack>
              <Stack>
                <Heading
                  fontSize="1rem"
                  fontWeight="bold"
                  textTransform="uppercase"
                >
                  cidade
                </Heading>
                <Text>
                  {data?.city} 
                </Text>
              </Stack>

              <Stack>
                <Heading
                  fontSize="1rem"
                  fontWeight="bold"
                  textTransform="uppercase"
                >
                  logradouro
                </Heading>
                <Text>
                  {data?.street} 
                </Text>
              </Stack>

              <Stack>
                <Heading
                  fontSize="1rem"
                  fontWeight="bold"
                  textTransform="uppercase"
                >
                  provider
                </Heading>
                <Text>
                  {data?.provider} 
                </Text>
              </Stack>

              <Stack>
                <Heading
                  fontSize="1rem"
                  fontWeight="bold"
                  textTransform="uppercase"
                >
                  estado
                </Heading>
                <Text>
                  {data?.state} 
                </Text>
              </Stack>

            </Grid>
          )}
        </Stack>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
